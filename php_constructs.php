<?php
if (условие) {
   код будет выполнен, если условие равно true;
} else {
   код будет выполнен, если условие равно false;
}
?>

<?php
if ($age > 18)
{  
echo "Welcome";
}
?>

<?php
$x = 10;
$y = 20;
if ($x >= $y) {
   echo $x;
} else {
   echo $y;
}

// Выведет "20"
?>

<?php
if($num == 100)
{echo "YES";}
else
{echo "NO";} 
?>

<?php
if (условие) {
  код будет выполнен если условие равно true;
} elseif (условие2) {
  код будет выполнен если условие2 равно true;
} else {
   код будет выполнен если оба условия равны false;
}
?>

<?php
$age = 21;

if ($age <= 13) {
    echo "Child";
} elseif ($age > 13 && $age < 19) {
    echo "Teenager";
} else {
    echo "Adult";
}

//Выведет "Adult"
?>



Мы использовали логический оператор AND (&&) для объединения двух условий и проверки, находится ли $age между 13 и 19.
    Фигурные скобки можно опустить, если после if/elseif/else есть только одно утверждение.
    Например:

<?php
if ($age <= 13)
    echo "Child";
else
    echo "Adult";
?>

<?php
if($gender == 0)
    echo "Male";
elseif ($gender == 1)
    echo "Female";
else
    echo "Undefined";
    ?>

<?php
while (условие равно true) {
   код будет выполняться;
}
// Если условие никогда не станет равным false, цикл будет выполняться бесконечно. И с этим нужно быть аккуратным, чтобы программа не зависла.
?>

<?php
$i = 1;
while ($i < 7) {
  echo "The value is $i <br />"; //Тег <br> устанавливает перевод строки в том месте, где этот тег находится.
  $i++;
}
?>

<?php
$i = 1;
while($i <= 15)   {
    echo "$i\n";
    $i++;
}
?>

<?php
do {
  выполняется код;
} while (условие равно true); 

 //   Независимо от того, является ли условие истинным или ложным, код будет выполнен хотя бы один раз, что может понадобиться в некоторых ситуациях.
?>

$i = 5;
do {
   echo "The number is " . $i . "<br/>";
   $i++;
} while($i <= 7);

//Вывод
//The number is 5
//The number is 6
//The number is 7

    Обратите внимание, что в цикле do while условие тестируется после выполнения операторов внутри цикла. Это означает, что в цикле do while его операторы будут выполняться хотя бы один раз, даже если условие ложно (false).


    $i = 0;
do {
$i++;
} while ($i < 10); 


for (init; test; increment) {
   выполняемый код;
}

Параметры:
init: инициализирует значение счетчика цикла;
test: оценивается каждый раз когда цикл выполняется, и цикл продолжается, пока он оценивается как истинный, и заканчивается, если он оценивается как ложный;
increment: увеличивает значение счетчика цикла.

    Каждый параметр может быть пустым или содержать несколько выражений, разделенных запятыми. 
    В операторе for параметры разделяются точкой с запятой.

<?php
for ($a = 0; $a < 6; $a++) {
    echo "Value of a : ". $a . "<br />";
}
?>

<?php
$name = "Bruce";
for($i=0; $i<10; $i++) {
echo $name; 
}
?>





